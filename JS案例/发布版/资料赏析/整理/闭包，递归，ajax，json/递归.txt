递归

一般定义：
	程序调用自身的编程技巧称为递归（ recursion）。
递归的另一种定义：
　　	递归，就是在运行的过程中调用自己。

       一个过程或函数在其定义或说明中有直接或间接调用自身的一种方法，它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合。一般来说，递归需要有边界条件、递归前进段和递归返回段。当边界条件不满足时，递归前进；当边界条件满足时，递归返回。

注意：
　　(1) 递归就是在过程或函数里调用自身；
　　(2) 在使用递归策略时，必须有一个明确的递归结束条件，称为递归出口。

递归算法一般用于解决三类问题：
　　(1)数据的定义是按递归定义的。（Fibonacci函数）
　　(2)问题解法按递归算法实现。（回溯）
　　(3)数据的结构形式是按递归定义的。（树的遍历，图的搜索）

递归的缺点：
　　递归算法解题相对常用的算法如普通循环等，运行效率较低。因此，应该尽量避免使用递归，除非没有更好的算法或者某种特定情况，递归更为适合的时候。在递归调用的过程当中系统为每一层的返回点、局部量等开辟了栈来存储。递归次数过多容易造成栈溢出等。