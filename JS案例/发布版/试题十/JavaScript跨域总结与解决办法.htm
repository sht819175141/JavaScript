<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>JavaScript跨域总结与解决办法 - Rain  Man - 博客园</title>
<link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=gdNkSiQMyBMkpTeO1ex9qW-60UbMszQItnCUpBAT3LQ1"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="http://common.cnblogs.com/Skins/SimpleBlue/style.css?id=20140415"/>
<link type="text/css" rel="stylesheet" href="/blog/customcss/37071.css?v=VhW0nKfA39C0TKk%2bNWJYUI9WGxI%3d"/>
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/rainman/rss"/>
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/rainman/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/rainman/wlwmanifest.xml"/>
<script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'rainman', cb_enable_mathjax=false;</script>
<script src="/bundles/blog-common.js?v=15gzXd7pJ_PNpSlGpVykf0EBaNg79HWL7oD5vVw0NGA1" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>

<div id="home">
<div id="header">
	<div id="blogTitle">
		
<!--done-->
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/rainman/">Rain Man</a></div>
<div class="subtitle">怀仁怀朴，唯真唯实。

<style type="text/css">
@import url("http://files.cnblogs.com/rainman/rainman.css");
</style></div>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li id="nav_sitehome"><a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a></li>
<li id="nav_myhome"><a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/rainman/">首页</a></li>
<li id="nav_q"><a class="menu" href="http://q.cnblogs.com/">博问</a></li>
<li id="nav_ing"><a class="menu" href="http://home.cnblogs.com/ing/">闪存</a></li>
<li id="nav_newpost"><a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li id="nav_contact"><a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/Rain++Man">联系</a></li>
<li id="nav_rss"><a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/rainman/rss">订阅</a>
<!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/rainman/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li id="nav_admin"><a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a></li>
</ul>

		<div class="blogStats">
			
			
<!--done-->
随笔-153&nbsp;
文章-0&nbsp;
评论-206&nbsp;

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		

<!--done-->
<div id="topics">
	<div class = "post">
		<h1 class = "postTitle">
			<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/rainman/archive/2011/02/20/1959325.html">JavaScript跨域总结与解决办法</a>
		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body"><div class="rainman-post">
<p>本文来自网络（http://f2e.me/200904/cross-scripting/，该网址已不能访问），仅作个人读书笔记之用，并稍作修改和补充。</p>
<h3>什么是跨域</h3>
<p>JavaScript出于安全方面的考虑，不允许跨域调用其他页面的对象。但在安全限制的同时也给注入iframe或是ajax应用上带来了不少麻烦。这里把涉及到跨域的一些问题简单地整理一下：</p>
<p>首先什么是跨域，简单地理解就是因为JavaScript同源策略的限制，a.com 域名下的js无法操作b.com或是c.a.com域名下的对象。更详细的说明可以看下表：</p>
<table class="border">
<tbody>
<tr>
<th>URL</th>
        	<th>说明</th>
        	<th>是否允许通信</th>
        
</tr>
<tr>
<td>http://www.a.com/a.js<br />
http://www.a.com/b.js</td>
<td>同一域名下</td>
<td>允许</td>
</tr>
<tr>
<td>http://www.a.com/lab/a.js<br />
http://www.a.com/script/b.js</td>
<td>同一域名下不同文件夹</td>
<td>允许</td>
</tr>
<tr>
<td>http://www.a.com:8000/a.js<br />
http://www.a.com/b.js</td>
<td>同一域名，不同端口</td>
<td>不允许</td>
</tr>
<tr>
<td>http://www.a.com/a.js<br />
https://www.a.com/b.js</td>
<td>同一域名，不同协议</td>
<td>不允许</td>
</tr>
<tr>
<td>http://www.a.com/a.js<br />
http://70.32.92.74/b.js</td>
<td>域名和域名对应ip</td>
<td>不允许</td>
</tr>
<tr>
<td>http://www.a.com/a.js<br />
http://script.a.com/b.js</td>
<td>主域相同，子域不同</td>
<td>不允许</td>
</tr>
<tr>
<td>http://www.a.com/a.js<br />
http://a.com/b.js
</td>
<td>同一域名，不同二级域名（同上）</td>
<td>不允许（cookie这种情况下也不允许访问）</td>
</tr>
<tr>
<td>http://www.cnblogs.com/a.js<br />
http://www.a.com/b.js</td>
<td>不同域名</td>
<td>不允许</td>
</tr>
</tbody>
</table>
<dl>
	<dt>特别注意两点：</dt>
    <dd>第一，如果是协议和端口造成的跨域问题&ldquo;前台&rdquo;是无能为力的，</dd>
    <dd>第二：在跨域问题上，域仅仅是通过&ldquo;URL的首部&rdquo;来识别而不会去尝试判断相同的ip地址对应着两个域或两个域是否在同一个ip上。<br />&ldquo;URL的首部&rdquo;指window.location.protocol +window.location.host，也可以理解为&ldquo;Domains, protocols and ports must match&rdquo;。</dd>    
</dl>
<p>接下来简单地总结一下在&ldquo;前台&rdquo;一般处理跨域的办法，后台proxy这种方案牵涉到后台配置，这里就不阐述了，有兴趣的可以看看yahoo的这篇文章：《<a target="_blank" href="http://developer.yahoo.com/javascript/howto-proxy.html">JavaScript: Use a Web Proxy for Cross-Domain XMLHttpRequest Calls</a>》</p>
<h3>1、document.domain+iframe的设置</h3>
<p><span class="highlight">对于主域相同而子域不同的例子，可以通过设置document.domain的办法来解决</span>。具体的做法是可以在http://www.a.com/a.html和http://script.a.com/b.html两个文件中分别加上document.domain = &lsquo;a.com&rsquo;；然后通过a.html文件中创建一个iframe，去控制iframe的contentDocument，这样两个js文件之间就可以&ldquo;交互&rdquo;了。当然这种办法只能解决主域相同而二级域名不同的情况，如果你异想天开的把script.a.com的domian设为alibaba.com那显然是会报错地！代码如下：</p>
<p>www.a.com上的a.html</p>
<div class="rainman-code">
<pre>document.domain = 'a.com';
var ifr = document.createElement('iframe');
ifr.src = 'http://script.a.com/b.html';
ifr.style.display = 'none';
document.body.appendChild(ifr);
ifr.onload = function(){
    var doc = ifr.contentDocument || ifr.contentWindow.document;
    // 在这里操纵b.html
    alert(doc.getElementsByTagName("h1")[0].childNodes[0].nodeValue);
};</pre>
</div>
<p>script.a.com上的b.html</p>
<div class="rainman-code">
<pre>document.domain = 'a.com';</pre>
</div>
<p>这种方式适用于{www.kuqin.com, kuqin.com, script.kuqin.com, css.kuqin.com}中的任何页面相互通信。</p>
<p>备注：某一页面的domain默认等于window.location.hostname。主域名是不带www的域名，例如a.com，主域名前面带前缀的通常都为二级域名或多级域名，例如www.a.com其实是二级域名。
domain只能设置为主域名，不可以在b.a.com中将domain设置为c.a.com。</p>
<dl>
	<dt>问题：</dt>
	<dd>1、安全性，当一个站点（b.a.com）被攻击后，另一个站点（c.a.com）会引起安全漏洞。</dd>
	<dd>2、如果一个页面中引入多个iframe，要想能够操作所有iframe，必须都得设置相同domain。</dd>
</dl>
<h3>2、动态创建script</h3>
<p><span class="highlight">虽然浏览器默认禁止了跨域访问，但并不禁止在页面中引用其他域的JS文件，并可以自由执行引入的JS文件中的function（包括操作cookie、Dom等等）</span>。根据这一点，可以方便地通过创建script节点的方法来实现完全跨域的通信。具体的做法可以参考YUI的<a target="_blank" href="http://developer.yahoo.com/yui/get/">Get Utility</a></p>
<p>这里判断script节点加载完毕还是蛮有意思的：ie只能通过script的readystatechange属性，其它浏览器是script的load事件。以下是部分判断script加载完毕的方法。</p>
<div class="rainman-code">
<pre>js.onload = js.onreadystatechange = function() {
    if (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') {
        // callback在此处执行
        js.onload = js.onreadystatechange = null;
    }
};</pre>
</div>
<h3>3、利用iframe和location.hash</h3>
<p>这个办法比较绕，但是可以解决完全跨域情况下的脚步置换问题。原理是利用location.hash来进行传值。在url： http://a.com#helloword中的&lsquo;#helloworld&rsquo;就是location.hash，改变hash并不会导致页面刷新，所以可以利用hash值来进行数据传递，当然数据容量是有限的。假设域名a.com下的文件cs1.html要和cnblogs.com域名下的cs2.html传递信息，cs1.html首先创建自动创建一个隐藏的iframe，iframe的src指向cnblogs.com域名下的cs2.html页面，这时的hash值可以做参数传递用。cs2.html响应请求后再将通过修改cs1.html的hash值来传递数据（<span class="gray">由于两个页面不在同一个域下IE、Chrome不允许修改parent.location.hash的值，所以要借助于a.com域名下的一个代理iframe；Firefox可以修改</span>）。同时在cs1.html上加一个定时器，隔一段时间来判断location.hash的值有没有变化，一点有变化则获取获取hash值。代码如下：</p>
<p>先是a.com下的文件cs1.html文件：</p>
<div class="rainman-code">
<pre>function startRequest(){
    var ifr = document.createElement('iframe');
    ifr.style.display = 'none';
    ifr.src = 'http://www.cnblogs.com/lab/cscript/cs2.html#paramdo';
    document.body.appendChild(ifr);
}

function checkHash() {
    try {
        var data = location.hash ? location.hash.substring(1) : '';
        if (console.log) {
            console.log('Now the data is '+data);
        }
    } catch(e) {};
}
setInterval(checkHash, 2000);</pre>
</div>
<p>cnblogs.com域名下的cs2.html:</p>
<div class="rainman-code">
<pre>//模拟一个简单的参数处理操作
switch(location.hash){
    case '#paramdo':
        callBack();
        break;
    case '#paramset':
        //do something&hellip;&hellip;
        break;
}

function callBack(){
    try {
        parent.location.hash = 'somedata';
    } catch (e) {
        // ie、chrome的安全机制无法修改parent.location.hash，
        // 所以要利用一个中间的cnblogs域下的代理iframe
        var ifrproxy = document.createElement('iframe');
        ifrproxy.style.display = 'none';
        ifrproxy.src = 'http://a.com/test/cscript/cs3.html#somedata';    <span class="green">// 注意该文件在"a.com"域下</span>
        document.body.appendChild(ifrproxy);
    }
}</pre>
</div>
<p>a.com下的域名cs3.html</p>
<div class="rainman-code">
<pre>//因为parent.parent和自身属于同一个域，所以可以改变其location.hash的值
parent.parent.location.hash = self.location.hash.substring(1);</pre>
</div>
<p>当然这样做也存在很多缺点，诸如数据直接暴露在了url中，数据容量和类型都有限等&hellip;&hellip;</p>
<h3>4、window.name实现的跨域数据传输</h3>
<p>文章较长列在此处不便于阅读，详细请看&nbsp;<a target="_blank" href="http://www.cnblogs.com/rainman/archive/2011/02/21/1960044.html">window.name实现的跨域数据传输</a>。</p>
<h3>5、使用HTML5 postMessage</h3>
<p><a href="http://dev.w3.org/html5/spec/" target="_blank">HTML5</a>中最酷的新功能之一就是 <a href="http://www.whatwg.org/specs/web-apps/current-work/#crossDocumentMessages" target="_blank">跨文档消息传输Cross Document Messaging</a>。下一代浏览器都将支持这个功能：Chrome 2.0+、Internet Explorer 8.0+, Firefox 3.0+, Opera 9.6+, 和 Safari 4.0+ 。 Facebook已经使用了这个功能，用postMessage支持基于web的实时消息传递。 </p>
<dl>
	<dt>otherWindow.postMessage(message, targetOrigin);</dt>
    <dd><span class="green">otherWindow: </span> 对接收信息页面的window的引用。可以是页面中iframe的contentWindow属性；<a href="https://developer.mozilla.org/en/DOM/window.open" target="_blank">window.open</a>的返回值；通过name或下标从<a href="https://developer.mozilla.org/en/DOM/window.frames" target="_blank">window.frames</a>取到的值。<br />
    <span class="green">message: </span> 所要发送的数据，string类型。<br />
    <span class="green">targetOrigin: </span> 用于限制otherWindow，&ldquo;*&rdquo;表示不作限制</dd>
</dl>
<p>a.com/index.html中的代码：</p>
<div class="rainman-code">
<pre>&lt;iframe id="ifr" src="b.com/index.html"&gt;&lt;/iframe&gt;
&lt;script type="text/javascript"&gt;
window.onload = function() {
    var ifr = document.getElementById('ifr');
    var targetOrigin = 'http://b.com';  <span class="green">// 若写成'http://b.com/c/proxy.html'效果一样</span>
                                        <span class="green">// 若写成'http://c.com'就不会执行postMessage了</span>
    ifr.contentWindow.postMessage('I was there!', targetOrigin);
};
&lt;/script&gt;</pre>
</div>
<p>b.com/index.html中的代码：</p>
<div class="rainman-code">
<pre>&lt;script type="text/javascript"&gt;
    window.addEventListener('message', function(event){
        // 通过origin属性判断消息来源地址
        if (event.origin == 'http://a.com') {
            alert(event.data);    // 弹出"I was there!"
            alert(event.source);  // 对a.com、index.html中window对象的引用
                                  // 但由于同源策略，这里event.source不可以访问window对象
        }
    }, false);
&lt;/script&gt;</pre>
</div>
<p>参考文章：<a href="http://www.grati.org/?p=429" target="_blank">《精通HTML5编程》第五章&mdash;&mdash;跨文档消息机制</a>、<a href="https://developer.mozilla.org/en/dom/window.postmessage" target="_blanks">https://developer.mozilla.org/en/dom/window.postmessage</a></p>
<h3>6、利用flash</h3>
<p>这是从YUI3的IO组件中看到的办法，具体可见<a target="_blank" href="http://developer.yahoo.com/yui/3/io/">http://developer.yahoo.com/yui/3/io/</a>。<br />可以看在Adobe Developer Connection看到更多的跨域代理文件规范：<a target="_blank" href="http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html">ross-Domain Policy File Specifications</a>、<a target="_blank" href="http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html">HTTP Headers Blacklist</a>。</p>
</div></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="blog_post_info">
</div>
<div class="clear"></div>
<div id="post_next_prev"></div>
</div>


		</div>
		<div class = "postDesc">posted @ <span id="post-date">2011-02-20 22:45</span> <a href='http://www.cnblogs.com/rainman/'>Rain  Man</a> 阅读(<span id="post_view_count">...</span>) 评论(<span id="post_comment_count">...</span>)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=1959325" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(1959325);return false;">收藏</a></div>
	</div>
	<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=37071,cb_entryId=1959325,cb_blogApp=currentBlogApp,cb_blogUserGuid='453a420b-63cf-dd11-9e4d-001cf0cd104b',cb_entryCreatedDate='2011/2/20 22:45:00';loadViewCount(cb_entryId);</script>
	
</div><!--end: topics 文章、评论容器-->
<a name="!comments"></a><div id="blog-comments-placeholder"></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
<div id="comment_form_container"></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="site_nav_under"><a href="http://www.cnblogs.com/" target="_blank" title="程序员的网上家园">博客园首页</a><a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区">博问</a><a href="http://news.cnblogs.com/" target="_blank" title="IT新闻">新闻</a><a href="http://home.cnblogs.com/ing/" target="_blank">闪存</a><a href="http://job.cnblogs.com/" target="_blank">程序员招聘</a><a href="http://kb.cnblogs.com/" target="_blank">知识库</a></div>
<div id="ad_under_post_holder"></div>
<script type="text/javascript">
var enableGoogleAd = true;
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
fixPostBodyFormat();
loadAdUnderPost();
</script>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
loadBlogSignature();
LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
</script>
<script type="text/javascript">
    $.ajax({ url: 'http://counter.cnblogs.com/blog/post/' + cb_entryId, type: 'get', dataType: 'script', cache: true });
</script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script></div>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright &copy;2014 Rain  Man
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->
<!--PageEndHtml Block Begin-->
<script type="text/javascript">
(function() {
    var guid = 0,
    getMaoDian = function(elem) {
        var md = 'm' + (guid++),
        html = '&nbsp;<a href="#" name="' + md + '"></a>';
        $(html).insertBefore(elem);
        return md;
    },
    encodeHTML = function(source) {
        return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, "&quot;").replace(/'/g, "&#39;");
    },
    addCatalogue = function(elem) {
        var levelList = {
            h3: 0
        },
        $nodes = $(elem).find('h3'),
        html = [];

        // Init HTML
        html.push('<ul class="catalogue">');
        $nodes.each(function() {
            var level = levelList[this.nodeName.toLowerCase()];
            maodian = getMaoDian(this),
            text = encodeHTML($(this).text());
            html.push('<li style="padding-left:' + (level * 40) + 'px"><span><a href="#' + maodian + '">' + text + '</a></span></li>');
        });
        html.push('</ul>');

        // Insert Node
        $(elem).prepend(html.join(''));
    };
    setTimeout(function(){
        $('div.postCon, #cnblogs_post_body').each(function() {
            addCatalogue(this);
        });
    }, 300);
})();
</script>

<!--

<script type="text/javascript" src="http://files.cnblogs.com/rainman/shCore.js"></script>
<script type="text/javascript" src="http://files.cnblogs.com/rainman/shBrushJScript.js"></script>
<link type="text/css" rel="stylesheet" href="http://files.cnblogs.com/rainman/shCoreDefault.css"/>

<script type="text/javascript" src="http://files.cnblogs.com/rainman/gaoLiang.js"></script>
-->



<script type="text/javascript">
$('pre').each(function(){
    var childCode = $(this).find('code');
    if(childCode.length>0) {
        this.innerHTML = $(this).find('code').html();
    }
});
SyntaxHighlighter.all('pre');

</script>


<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F95eb98507622b340bc1da73ed59cfe34' type='text/javascript'%3E%3C/script%3E"));
</script>
<!--PageEndHtml Block End-->
</body>
</html>
